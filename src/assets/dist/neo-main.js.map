{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n    this._uid = settings.uid\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name },\n\n  /**\n   * @public\n   * @since 3.7.0\n   * @returns this tab's UID\n   */\n  getUid () { return this._uid }\n})\n","import Garnish from 'garnish'\nimport Craft from 'craft'\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  field: null,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: null,\n  tabNames: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._field = settings.field\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabNames = settings.tabNames\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._html = settings.tabs?.html ?? ''\n    this._js = settings.tabs?.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs?.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabNames () { return this._tabNames },\n\n  getTabs () { return this._tabs !== null ? Array.from(this._tabs) : null },\n  async loadTabs () {\n    if (this._tabs !== null) {\n      return\n    }\n\n    NS.enter(this._field.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._field?.getSiteId(),\n      blocks: [{\n        collapsed: false,\n        enabled: true,\n        level: 1,\n        ownerId: this._field?.getOwnerId(),\n        type: this._id\n      }]\n    }\n    NS.leave()\n\n    const renderedBlocks = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n    if (renderedBlocks.data.success) {\n      if (renderedBlocks.data.headHtml) {\n        Craft.appendHeadHtml(renderedBlocks.data.headHtml)\n      }\n\n      if (renderedBlocks.data.bodyHtml) {\n        Craft.appendBodyHtml(renderedBlocks.data.bodyHtml)\n      }\n\n      const tabs = renderedBlocks.data.blocks[0].tabs\n      this._tabs = tabs.tabNames?.map(\n        tab => new Tab({\n          name: tab,\n          uid: tabs.tabUids[tab]\n        })\n      ) ?? []\n      this._html = tabs.html\n      this._js = tabs.js\n    }\n  },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\nimport Tab from './BlockTypeTab'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  tabs: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n  _tabs: null,\n  _html: null,\n  _js: null,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    if (settings.tabs !== null) {\n      this._tabs = settings.tabs.tabNames?.map(\n        tab => tab instanceof Tab\n          ? tab\n          : new Tab({\n            name: tab,\n            uid: settings.tabs.tabUids[tab]\n          })\n      ) ?? []\n    } else {\n      this._tabs = null\n    }\n    this._html = settings.tabs?.html ?? null\n    this._js = settings.tabs?.js ?? null\n    this._id = settings.id\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : this._field.$container.find(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n    this.resetButtons(settings.buttons)\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tabName of this._blockType.getTabNames()) {\n        const selector = `[data-neo-b-info=\"${tabName}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const tabs = this._tabs ?? type.getTabs()\n    const hasTabs = tabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">`)\n\n    if (isNaN(parseInt(this._id))) {\n      elementHtml.push(`\n        <input type=\"hidden\" name=\"${baseInputName}[collapsed]\" value=\"${!this._expanded ? '1' : ''}\" data-neo-b=\"${this._id}.input.collapsed\">`)\n    }\n\n    elementHtml.push(`\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')}\" aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (tabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < tabs.length; i++) {\n        const tab = tabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${tabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < tabs.length; i++) {\n        const tab = tabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${this.getHtml()}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    if (callInitUiElements) {\n      this.$foot = $(this.getJs()).filter(_resourceFilter)\n      Garnish.$bod.append(this.$foot)\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getHtml () {\n    return this._html !== null\n      ? this._html.replace(/__NEOBLOCK__/g, this._id)\n      : this._blockType.getHtml(this._id)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getJs () {\n    return this._js !== null\n      ? this._js.replace(/__NEOBLOCK__/g, this._id)\n      : this._blockType.getJs(this._id)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot?.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    // Finally, only allow block types that are allowed to be created by the current user\n    // This is safe since allowedBlockTypes is only used to check if paste/add block actions should be disabled\n    allowedBlockTypes = allowedBlockTypes.filter((bt) => bt.isCreatableByUser())\n\n    const field = this._field.getName()\n    const maxBlocks = this._field.getMaxBlocks()\n    const additionalCheck = true\n    const maxTopBlocks = this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    const noAllowedBlockTypes = !allowedBlockTypes || allowedBlockTypes.length === 0\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const addDisabled = allDisabled || noAllowedBlockTypes\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n\n    // Paste/add actions should be hidden if there is no chance of them being enabled later\n    if (noAllowedBlockTypes) {\n      this.$menuContainer.find('[data-action=\"add\"]').parent().toggleClass('hidden', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').parent().toggleClass('hidden', pasteDisabled)\n    } else {\n      this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n    }\n\n    // If there are no visible items in the second list, hide the separator as well\n    this.$menuContainer.children('hr').toggleClass(\n      'hidden',\n      this.$menuContainer.children('ul:last-child').children('li:not(.hidden)').length === 0\n    )\n  },\n\n  resetButtons (settings) {\n    this.$blocksContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$childrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n\n    if (typeof settings !== 'undefined' && settings !== null) {\n      this._buttons = settings\n    } else {\n      this._buttons = new this._field.ButtonClass({\n        $ownerContainer: this.$container,\n        field: this._field,\n        items: this._blockType.getChildBlockItems(this._field.getItems()),\n        maxBlocks: this._field.getMaxBlocks()\n      })\n    }\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n\n      if (this._initialised) {\n        this._buttons.initUi()\n      }\n    }\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblockgrid_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblocklist_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n  _newBlockId: 0,\n  _newBlockCount: 0,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._minBlocks = settings.minBlocks\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    const animate = !Garnish.prefersReducedMotion()\n    this._$spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : Craft.t('neo', 'Loading')}</div>`)\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this.ButtonClass = ButtonsGrid\n        break\n      case 'list':\n        this.ButtonClass = ButtonsList\n        break\n      default:\n        this.ButtonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(Object.assign({ field: this }, btInfo))\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this.ButtonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStart: () => {\n        this.$form.data('elementEditor')?.pause()\n      },\n      onDragStop: () => {\n        this.$form.data('elementEditor')?.resume()\n        this._updateBlockOrder()\n        this._updateButtons()\n        this._updateAllVisibleElements()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = blockType\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      $block.data('block', block)\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Create any required top level blocks, if this field has only one top level block type\n    if (this._minBlocks > 0) {\n      const missingBlockCount = this._minBlocks - this._blocks.length\n      const topLevelBlockTypes = this.getBlockTypes(true)\n\n      if (topLevelBlockTypes.length === 1 && missingBlockCount > 0) {\n        for (let i = this._blocks.length; i < this._minBlocks; i++) {\n          this['@newBlock']({\n            blockType: topLevelBlockTypes[0],\n            createChildBlocks: false,\n            index: i,\n            level: 1\n          })\n        }\n      }\n    }\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null, createChildBlocks = true) {\n    this._newBlockCount++\n    this.$form.data('elementEditor')?.pause()\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    block.$container.data('block', block)\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Construct the block's visible layout elements, since they might not be the default visible\n    // layout elements for the block type, e.g. if pasting a block\n    const visibleLayoutElements = {}\n    block.$contentContainer.children('[data-layout-tab]').each((_, layoutTab) => {\n      const tabUid = layoutTab.getAttribute('data-layout-tab')\n      visibleLayoutElements[tabUid] = []\n      layoutTab.querySelectorAll(':scope > [data-layout-element]:not([data-layout-element-placeholder])')\n        .forEach((layoutElement) => {\n          visibleLayoutElements[tabUid].push(layoutElement.getAttribute('data-layout-element'))\n        })\n    })\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Create any required child blocks, if this block has only one child block type\n    const createChildBlocksIfAllowed = () => {\n      if (createChildBlocks) {\n        const blockType = block.getBlockType()\n        const minChildBlocks = blockType.getMinChildBlocks()\n\n        if (minChildBlocks > 0) {\n          let childBlockTypes = blockType.getChildBlocks()\n\n          if (childBlockTypes === '*') {\n            childBlockTypes = this.getBlockTypes()\n          }\n\n          if (childBlockTypes.length === 1) {\n            const childBlockType = this.getBlockTypeByHandle(childBlockTypes[0])\n\n            for (let i = 0; i < minChildBlocks; i++) {\n              this['@newBlock']({\n                blockType: childBlockType,\n                createChildBlocks: false,\n                index: index + i + 1,\n                level: level + 1\n              })\n            }\n          }\n        }\n      }\n\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => {\n          Garnish.scrollContainerToElement(block.$container)\n          createChildBlocksIfAllowed()\n        }))\n    } else {\n      createChildBlocksIfAllowed()\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return $($block).data('block')\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  /**\n   * @since 3.9.2\n   */\n  getNamespace () {\n    return Array.from(this._templateNs)\n  },\n\n  /**\n   * @since 3.9.3\n   */\n  getOwnerId () {\n    return this._ownerId\n  },\n\n  /**\n   * @since 3.9.5\n   */\n  getSiteId () {\n    return this._siteId\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    this._formObserver = new Craft.FormObserver(this.$form, () => this._updateAllVisibleElements())\n  },\n\n  async _updateAllVisibleElements () {\n    const checkNumber = Math.floor(Math.random() * 1000000)\n    this._lastFormCheck = checkNumber\n    const elementEditor = this.$form.data('elementEditor')\n\n    // Do nothing if the draft is being resaved, or there's no element editor data\n    if (elementEditor?.submittingForm ?? true) {\n      return\n    }\n\n    // Don't update visible elements if the draft save was the result of creating a new block\n    if (this._newBlockCount > 0) {\n      this._newBlockCount--\n      return\n    }\n\n    const siteId = elementEditor.settings.siteId\n    NS.enter(this.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      blocks: {},\n      sortOrder: [],\n      fieldId: this._id,\n      ownerCanonicalId: this._ownerId,\n      ownerDraftId: elementEditor.settings.draftId,\n      isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n      siteId\n    }\n    NS.leave()\n    const originalBlockIds = {}\n    this._blocks.forEach((block) => {\n      const selectedTabId = block.$contentContainer\n        .children('[data-layout-tab]:not(.hidden)')\n        .data('layout-tab')\n      data.blocks[block.getDuplicatedBlockId()] = {\n        selectedTab: selectedTabId ?? null,\n        visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n      }\n      data.sortOrder.push(block.getDuplicatedBlockId())\n      originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n    })\n\n    try {\n      const response = await Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n\n      // Ignore the response if the form has since been edited\n      if (this._lastFormCheck !== checkNumber) {\n        return\n      }\n\n      for (const blockId in response.data.blocks) {\n        const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n        this._updateVisibleElements(\n          block,\n          response.data.blocks[blockId],\n          data.blocks[block.getDuplicatedBlockId()].selectedTabId\n        )\n      }\n    } catch (err) {\n      Craft.cp.displayError(err)\n      throw err\n    }\n  },\n\n  /**\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const html = elementInfo.html.replaceAll('__NEOBLOCK__', block.getId())\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            if ($newElement.hasClass('ni_child-blocks-ui-element')) {\n              block.resetButtons()\n            }\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n\n      if (changedElements) {\n        this._updateButtons()\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml.replaceAll('__NEOBLOCK__', block.getId()))\n    Craft.appendBodyHtml(blockData.bodyHtml.replaceAll('__NEOBLOCK__', block.getId()))\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _addSpinnerAfter (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.after(this._$spinner)\n    } else {\n      this.$blocksContainer.prepend(this._$spinner)\n    }\n  },\n\n  _addSpinnerBefore (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.before(this._$spinner)\n    } else {\n      this.$blocksContainer.append(this._$spinner)\n    }\n  },\n\n  _animateSpinnerThen (callback) {\n    if (!Garnish.prefersReducedMotion()) {\n      this._$spinner\n        .css({\n          opacity: 0,\n          marginBottom: -(this._$spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => callback())\n    } else {\n      callback()\n    }\n  },\n\n  _removeSpinner () {\n    this._$spinner.remove()\n  },\n\n  _getNewBlockId () {\n    while (this.$blocksContainer.find(`[data-neo-b-id=\"new${this._newBlockId}\"]`).length > 0) {\n      this._newBlockId++\n    }\n\n    return `new${this._newBlockId++}`\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n    this._addSpinnerAfter(block)\n    this._animateSpinnerThen(() => Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = this._getNewBlockId()\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: this.getBlockTypeById(renderedBlock.type),\n            tabs: renderedBlock.tabs,\n            id: newId,\n            level: renderedBlock.level | 0,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        let newIndex = this._getNextBlockIndex(block)\n\n        for (const newBlock of newBlocks) {\n          this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n        }\n\n        if (!Garnish.prefersReducedMotion()) {\n          const firstBlock = newBlocks[0]\n\n          firstBlock.$container\n            .css({\n              opacity: 0,\n              marginBottom: this._$spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n        }\n\n        this._removeSpinner()\n        this.$form.data('elementEditor')?.resume()\n      }\n    }))\n  },\n\n  async '@newBlock' (e) {\n    const createTheBlock = () => {\n      const blockId = this._getNewBlockId()\n      const block = new Block({\n        namespace: [...this._templateNs, blockId],\n        field: this,\n        blockType: e.blockType,\n        id: blockId,\n        showButtons: !this.atMaxLevels(e.level),\n        showBlockTypeHandle: this._showBlockTypeHandles\n      }, true)\n\n      this._removeSpinner()\n      this.addBlock(block, e.index, e.level, e.createChildBlocks, e.createChildBlocks)\n    }\n\n    if (e.blockType.getTabs() !== null) {\n      createTheBlock()\n      return\n    }\n\n    const elementEditor = this.$form.data('elementEditor')\n\n    try {\n      elementEditor?.pause()\n      const level = e.level ?? 1\n      const loopStartingPoint = typeof e.index !== 'undefined'\n        ? Math.min(e.index - 1, this._blocks.length - 1)\n        : this._blocks.length - 1\n      let siblingBlock\n      let addAfter = true\n\n      for (let i = loopStartingPoint; i >= 0; i--) {\n        // Look for the previous block at the same level as the new block, to add the spinner after\n        if (this._blocks[i].getLevel() === level) {\n          siblingBlock = this._blocks[i]\n          break\n        }\n\n        // If we've gone to a lower level, any future block we find at the same level won't be a\n        // sibling of the new block, so we need to add the spinner before the last block we checked\n        if (this._blocks[i].getLevel() < level) {\n          siblingBlock = this._blocks[i + 1]\n          addAfter = false\n          break\n        }\n      }\n\n      if (addAfter) {\n        this._addSpinnerAfter(siblingBlock)\n      } else {\n        this._addSpinnerBefore(siblingBlock)\n      }\n\n      this._animateSpinnerThen(async () => {\n        await e.blockType.loadTabs()\n        createTheBlock()\n      })\n    } catch (error) {\n      this._removeSpinner()\n      Craft.cp.displayError(error)\n    } finally {\n      elementEditor?.resume()\n    }\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this.ButtonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","arguments","length","undefined","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","extend","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","_uid","uid","getErrors","getName","getUid","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","tabNames","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_settings$tabs$html","_settings$tabs","_settings$tabs$js","_settings$tabs2","_settings$tabs$visibl","_settings$tabs3","_settings$tabs$tabNam","_settings$tabs$tabNam2","_id","_field","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabNames","_tabs","map","tab","Tab","tabUids","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabNames","getTabs","loadTabs","_this$_field","_this$_field2","NS","namespace","siteId","getSiteId","collapsed","level","ownerId","getOwnerId","renderedBlocks","success","_tabs$tabNames$map","_tabs$tabNames","headHtml","bodyHtml","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","_objectSpread","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","insertAt","index","$parent","eq","buttons","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","concat","$neo","$bodyContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","resetButtons","hasErrors","tabName","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","_this$_tabs","showHandle","baseInputName","baseInputId","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","isNaN","parseInt","tabUid","$elementHtml","createCopyTextBtn","class","insertAfter","initUi","_this$_buttons","callInitUiElements","$foot","initTabs","_settingsMenu","on","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","_buttons","updateResponsiveness","e","parents","_","cbuiElement","$tabContent","tabIndex","add","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","addFieldLinks","trigger","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","_this$$foot","remove","clearInterval","_detectChangeInterval","disconnect","getDuplicatedBlockId","_this$$form$data$dupl","_this$$form$data","duplicatedElements","isTopLevel","val","setModified","isModified","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","_blocks","blockParent","currentBlock","_blocks2","currentLevel","getSiblings","_blocks3","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","_this$$form$data2","sentBlockId","isProvisionalDraft","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","$buttonsContainer","$childrenWarningsContainer","selectTab","attr","retryAll","_this$_topbarLeftWidt","_this$_topbarRightWid","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","_this$getParent","_parentBlockType$getC","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","getMaxTopBlocks","noAllowedBlockTypes","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","addDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","_pasteData$blocks$len","_pasteData$blocks","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","$collapsedChildrenContainer","ButtonClass","$ownerContainer","getItems","namespaceId","namespacedId","toggle","_toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","_this$$form$data3","_this$$form$data4","pause","resume","currentTarget","blockTypes","groups","NewBlockMenu","constructor","_defineProperty","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","_this$$ownerContainer","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","additionalCheck","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","ButtonsGrid","_ref","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","_visibleLayoutElements","_newBlockId","_newBlockCount","_groups","gInfo","Group","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","_$spinner","newBlockMenuStyle","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","_updateAllVisibleElements","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","missingBlockCount","topLevelBlockTypes","createChildBlocks","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_this$_tempButtons","_block$getButtons","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","layoutTab","getAttribute","querySelectorAll","layoutElement","createChildBlocksIfAllowed","childBlockTypes","childBlockType","marginBottom","_this$$form$data5","_delayAnimate","_findChildBlocks","off","finishTheRemoval","_this$$form$data6","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","_this$$form$data7","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","_this$$form$data8","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_this$_tempButtons2","_tempButtonsBlock","_block$getButtons2","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","_formObserver","_elementEditor$submit","checkNumber","floor","random","_lastFormCheck","submittingForm","fieldId","ownerCanonicalId","ownerDraftId","originalBlockIds","_this$_visibleLayoutE","selectedTabId","selectedTab","response","_updateVisibleElements","err","displayError","blockData","_blockData$tabs$match","_blockData$tabs","$allTabContainers","changedElements","missingElements","tabInfo","appendTo","j","elements","elementInfo","replaceAll","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","$tabsHtml","empty","initialDeltaValues","_addSpinnerAfter","_addSpinnerBefore","_animateSpinnerThen","_removeSpinner","_getNewBlockId","_duplicate","_this$$form$data9","_this$$form$data10","newBlocks","renderedBlock","newId","newBlock","newIndex","firstBlock","createTheBlock","_e$level","loopStartingPoint","siblingBlock","addAfter","async","error","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","displayNotice","n","_block$getLevel","baseLevel","blockIndex","subBlocks","getBlockData","context","_window","inputs","Neo","Input","createInput"],"sourceRoot":""}