{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\nimport Craft from 'craft'\nimport NS from '../namespace'\n\nconst _defaults = {\n  id: -1,\n  field: null,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabNames: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._field = settings.field\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabNames = settings.tabNames\n    this._html = settings.tabs?.html ?? ''\n    this._js = settings.tabs?.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs?.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabNames () { return this._tabNames },\n\n  async newBlock () {\n    NS.enter(this._field.getNamespace())\n    const data = {\n      namespace: NS.toFieldName(),\n      fieldId: this._field?.getId(),\n      siteId: this._field?.getSiteId(),\n      blocks: [{\n        collapsed: false,\n        enabled: true,\n        level: 1,\n        ownerId: this._field?.getOwnerId(),\n        type: this._id\n      }]\n    }\n    NS.leave()\n    const response = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n\n    return response.data.blocks[0]\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  tabs: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n  _html: null,\n  _js: null,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    this._blockHtml = settings.blockHtml\n    this._bodyHtml = settings.bodyHtml\n    this._headHtml = settings.headHtml\n    this._id = settings.id\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = this._blockHtml\n      ? $(this._blockHtml)\n      : this._field.$container.find(`[data-neo-b-id=${this._id}]`)\n    this._uuid = settings.uuid ?? this.$container.data('neo-b-uuid')\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n    this.resetButtons(settings.buttons)\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tabName of this._blockType.getTabNames()) {\n        const selector = `[data-neo-b-info=\"${tabName}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    if (callInitUiElements) {\n      Craft.appendBodyHtml(this._bodyHtml)\n      Craft.appendHeadHtml(this._headHtml)\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getHtml () {\n    return this._blockHtml.replace(/__NEOBLOCK__/g, this._id)\n  },\n\n  /**\n   * @since 3.9.0\n   */\n  getJs () {\n    return this._bodyHtml.replace(/__NEOBLOCK__/g, this._id)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot?.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the block UUID\n   * @since 5.0.0\n   */\n  getUuid () {\n    return this._uuid\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.draftElementIds[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    // Finally, only allow block types that are allowed to be created by the current user\n    // This is safe since allowedBlockTypes is only used to check if paste/add block actions should be disabled\n    allowedBlockTypes = allowedBlockTypes.filter((bt) => bt.isCreatableByUser())\n\n    const field = this._field.getName()\n    const maxBlocks = this._field.getMaxBlocks()\n    const additionalCheck = true\n    const maxTopBlocks = this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    const noAllowedBlockTypes = !allowedBlockTypes || allowedBlockTypes.length === 0\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const addDisabled = allDisabled || noAllowedBlockTypes\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n\n    // Paste/add actions should be hidden if there is no chance of them being enabled later\n    if (noAllowedBlockTypes) {\n      this.$menuContainer.find('[data-action=\"add\"]').parent().toggleClass('hidden', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').parent().toggleClass('hidden', pasteDisabled)\n    } else {\n      this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n    }\n\n    // If there are no visible items in the second list, hide the separator as well\n    this.$menuContainer.children('hr').toggleClass(\n      'hidden',\n      this.$menuContainer.children('ul:last-child').children('li:not(.hidden)').length === 0\n    )\n  },\n\n  resetButtons (settings) {\n    this.$blocksContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$childrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n\n    if (typeof settings !== 'undefined' && settings !== null) {\n      this._buttons = settings\n    } else {\n      this._buttons = new this._field.ButtonClass({\n        $ownerContainer: this.$container,\n        field: this._field,\n        items: this._blockType.getChildBlockItems(this._field.getItems()),\n        maxBlocks: this._field.getMaxBlocks()\n      })\n    }\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n\n      if (this._initialised) {\n        this._buttons.initUi()\n      }\n    }\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][uid:${this._uuid}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblockgrid_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblocklist_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n  _newBlockCount: 0,\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._minBlocks = settings.minBlocks\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    const animate = !Garnish.prefersReducedMotion()\n    this._$spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : Craft.t('neo', 'Loading')}</div>`)\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this.ButtonClass = ButtonsGrid\n        break\n      case 'list':\n        this.ButtonClass = ButtonsList\n        break\n      default:\n        this.ButtonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(Object.assign({ field: this }, btInfo))\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this.ButtonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = blockType\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Create any required top level blocks, if this field has only one top level block type\n    if (this._minBlocks > 0) {\n      const missingBlockCount = this._minBlocks - this._blocks.length\n      const topLevelBlockTypes = this.getBlockTypes(true)\n\n      if (topLevelBlockTypes.length === 1 && missingBlockCount > 0) {\n        for (let i = this._blocks.length; i < this._minBlocks; i++) {\n          this['@newBlock']({\n            blockType: topLevelBlockTypes[0],\n            createChildBlocks: false,\n            index: i,\n            level: 1\n          })\n        }\n      }\n    }\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  /**\n   * @public\n   * @returns the field's ID\n   * @since 5.0.0\n   */\n  getId () {\n    return this._id\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null, createChildBlocks = true) {\n    this._newBlockCount++\n    this.$form.data('elementEditor')?.pause()\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Construct the block's visible layout elements, since they might not be the default visible\n    // layout elements for the block type, e.g. if pasting a block\n    const visibleLayoutElements = {}\n    block.$contentContainer.children('[data-layout-tab]').each((_, layoutTab) => {\n      const tabUid = layoutTab.getAttribute('data-layout-tab')\n      visibleLayoutElements[tabUid] = []\n      layoutTab.querySelectorAll(':scope > [data-layout-element]:not([data-layout-element-placeholder])')\n        .forEach((layoutElement) => {\n          visibleLayoutElements[tabUid].push(layoutElement.getAttribute('data-layout-element'))\n        })\n    })\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Create any required child blocks, if this block has only one child block type\n    const createChildBlocksIfAllowed = () => {\n      if (createChildBlocks) {\n        const blockType = block.getBlockType()\n        const minChildBlocks = blockType.getMinChildBlocks()\n\n        if (minChildBlocks > 0) {\n          let childBlockTypes = blockType.getChildBlocks()\n\n          if (childBlockTypes === '*') {\n            childBlockTypes = this.getBlockTypes()\n          }\n\n          if (childBlockTypes.length === 1) {\n            const childBlockType = this.getBlockTypeByHandle(childBlockTypes[0])\n\n            for (let i = 0; i < minChildBlocks; i++) {\n              this['@newBlock']({\n                blockType: childBlockType,\n                createChildBlocks: false,\n                index: index + i + 1,\n                level: level + 1\n              })\n            }\n          }\n        }\n      }\n\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => {\n          Garnish.scrollContainerToElement(block.$container)\n          createChildBlocksIfAllowed()\n        }))\n    } else {\n      createChildBlocksIfAllowed()\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  /**\n   * @since 3.9.2\n   */\n  getNamespace () {\n    return Array.from(this._templateNs)\n  },\n\n  /**\n   * @since 3.9.3\n   */\n  getOwnerId () {\n    return this._ownerId\n  },\n\n  /**\n   * @since 3.9.5\n   */\n  getSiteId () {\n    return this._siteId\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(() => {\n      const elementEditor = this.$form.data('elementEditor')\n      elementEditor?.on('update', () => {\n        // If the draft's being resaved, wait until we get the next event\n        if (elementEditor.submittingForm) {\n          return\n        }\n\n        // Don't update visible elements if the draft save was the result of creating a new block\n        if (this._newBlockCount > 0) {\n          this._newBlockCount--\n          return\n        }\n\n        elementEditor.pause()\n        const siteId = elementEditor.settings.siteId\n        NS.enter(this.getNamespace())\n        const data = {\n          namespace: NS.toFieldName(),\n          blocks: {},\n          sortOrder: [],\n          fieldId: this._id,\n          ownerCanonicalId: this._ownerId,\n          ownerDraftId: elementEditor.settings.draftId,\n          isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n          siteId\n        }\n        NS.leave()\n        const originalBlockIds = {}\n        this._blocks.forEach((block) => {\n          const selectedTabId = block.$contentContainer\n            .children('[data-layout-tab]:not(.hidden)')\n            .data('layout-tab')\n          data.blocks[block.getDuplicatedBlockId()] = {\n            selectedTab: selectedTabId ?? null,\n            visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n          }\n          data.sortOrder.push(block.getDuplicatedBlockId())\n          originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n        })\n\n        Craft.queue.push(() => new Promise((resolve, reject) => {\n          Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n            .then((response) => {\n              for (const blockId in response.data.blocks) {\n                const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n                this._updateVisibleElements(\n                  block,\n                  response.data.blocks[blockId],\n                  data.blocks[block.getDuplicatedBlockId()].selectedTabId\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n            .finally(() => elementEditor.resume())\n        }))\n      })\n    }, 200)\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const html = elementInfo.html.replaceAll('__NEOBLOCK__', block.getId())\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            if ($newElement.hasClass('ni_child-blocks-ui-element')) {\n              block.resetButtons()\n            }\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n\n      if (changedElements) {\n        this._updateButtons()\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml.replaceAll('__NEOBLOCK__', block.getId()))\n    Craft.appendBodyHtml(blockData.bodyHtml.replaceAll('__NEOBLOCK__', block.getId()))\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _addSpinnerAfter (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.after(this._$spinner)\n    } else {\n      this.$blocksContainer.prepend(this._$spinner)\n    }\n\n    this._animateSpinner()\n  },\n\n  _addSpinnerBefore (block) {\n    if (typeof block !== 'undefined') {\n      block.$container.before(this._$spinner)\n    } else {\n      this.$blocksContainer.append(this._$spinner)\n    }\n\n    this._animateSpinner()\n  },\n\n  _animateSpinner () {\n    if (Garnish.prefersReducedMotion()) {\n      return Promise.resolve()\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        this._$spinner\n          .css({\n            opacity: 0,\n            marginBottom: -(this._$spinner.outerHeight())\n          })\n          .velocity({\n            opacity: 1,\n            marginBottom: 10\n          }, 'fast', () => resolve())\n      } catch (err) {\n        reject(err)\n      }\n    })\n  },\n\n  _removeSpinner () {\n    this._$spinner.remove()\n  },\n\n  async _duplicate (data, block) {\n    try {\n      this.$form.data('elementEditor')?.pause()\n      await this._addSpinnerAfter(block)\n      const response = await Craft.sendActionRequest('POST', 'neo/input/render-blocks', { data })\n      const newBlocks = []\n\n      for (const renderedBlock of response.data.blocks) {\n        const newBlockId = renderedBlock.id\n        const newBlock = new Block({\n          namespace: [...this._templateNs, newBlockId],\n          field: this,\n          blockType: this.getBlockTypeById(renderedBlock.type),\n          blockHtml: renderedBlock.blockHtml,\n          bodyHtml: renderedBlock.bodyHtml,\n          headHtml: renderedBlock.headHtml,\n          id: newBlockId,\n          uuid: renderedBlock.uuid,\n          level: renderedBlock.level | 0,\n          enabled: !!renderedBlock.enabled,\n          collapsed: !!renderedBlock.collapsed,\n          showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n          showBlockTypeHandle: this._showBlockTypeHandles\n        }, true)\n\n        newBlocks.push(newBlock)\n      }\n\n      let newIndex = this._getNextBlockIndex(block)\n\n      for (const newBlock of newBlocks) {\n        this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n      }\n\n      if (!Garnish.prefersReducedMotion() && newBlocks.length > 0) {\n        const firstBlock = newBlocks[0]\n\n        firstBlock.$container\n          .css({\n            opacity: 0,\n            marginBottom: this._$spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n          })\n          .velocity({\n            opacity: 1,\n            marginBottom: 10\n          }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n      }\n    } catch (err) {\n      Craft.cp.displayError(err.message)\n    } finally {\n      this._removeSpinner()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  async '@newBlock' (e) {\n    const elementEditor = this.$form.data('elementEditor')\n\n    try {\n      elementEditor?.pause()\n      const level = e.level ?? 1\n      const loopStartingPoint = typeof e.index !== 'undefined'\n        ? Math.min(e.index - 1, this._blocks.length - 1)\n        : this._blocks.length - 1\n      let siblingBlock\n      let addAfter = true\n\n      for (let i = loopStartingPoint; i >= 0; i--) {\n        // Look for the previous block at the same level as the new block, to add the spinner after\n        if (this._blocks[i].getLevel() === level) {\n          siblingBlock = this._blocks[i]\n          break\n        }\n\n        // If we've gone to a lower level, any future block we find at the same level won't be a\n        // sibling of the new block, so we need to add the spinner before the last block we checked\n        if (this._blocks[i].getLevel() < level) {\n          siblingBlock = this._blocks[i + 1]\n          addAfter = false\n          break\n        }\n      }\n\n      if (addAfter) {\n        await this._addSpinnerAfter(siblingBlock)\n      } else {\n        await this._addSpinnerBefore(siblingBlock)\n      }\n\n      const newBlock = await e.blockType.newBlock()\n      const blockId = newBlock.id\n      const block = new Block({\n        namespace: [...this._templateNs, blockId],\n        field: this,\n        blockType: e.blockType,\n        id: blockId,\n        uuid: newBlock.uuid,\n        blockHtml: newBlock.blockHtml,\n        bodyHtml: newBlock.bodyHtml,\n        headHtml: newBlock.headHtml,\n        showButtons: !this.atMaxLevels(e.level),\n        showBlockTypeHandle: this._showBlockTypeHandles\n      }, true)\n\n      this._removeSpinner()\n      this.addBlock(block, e.index, e.level, e.createChildBlocks, e.createChildBlocks)\n    } catch (error) {\n      this._removeSpinner()\n      Craft.cp.displayError(error)\n    } finally {\n      elementEditor?.resume()\n    }\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this.ButtonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent()\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n        pasteBlock.ownerId = this._ownerId\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        fieldId: this._id,\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      fieldId: this._id,\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","arguments","length","undefined","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","extend","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","fieldLayoutId","sortOrder","name","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabNames","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_settings$tabs$html","_settings$tabs","_settings$tabs$js","_settings$tabs2","_settings$tabs$visibl","_settings$tabs3","assign","_id","_field","_fieldLayoutId","_sortOrder","_name","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabNames","_html","tabs","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getName","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabNames","newBlock","_this$_field","_this$_field2","_this$_field3","NS","namespace","fieldId","siteId","getSiteId","collapsed","level","ownerId","getOwnerId","getDefaultVisibleLayoutElements","_objectSpread","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","insertAt","index","$parent","eq","buttons","modified","showButtons","showBlockTypeHandle","_escapeMap","_escapeHTML","str","s","_limit","l","_templateNs","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","_settings$uuid","_blockHtml","blockHtml","_bodyHtml","bodyHtml","_headHtml","headHtml","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","concat","_uuid","uuid","$neo","$bodyContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","resetButtons","hasErrors","tabName","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","initUi","_this$_buttons","callInitUiElements","initTabs","_settingsMenu","on","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","_buttons","updateResponsiveness","e","parents","_","cbuiElement","$tabContent","tabIndex","add","isNew","_level","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","addFieldLinks","trigger","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","getHtml","getJs","destroy","_this$$foot","$foot","remove","clearInterval","_detectChangeInterval","disconnect","getUuid","getDuplicatedBlockId","_this$$form$data$draf","_this$$form$data","draftElementIds","isTopLevel","val","setModified","isModified","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","_blocks","blockParent","currentBlock","_blocks2","currentLevel","getSiblings","_blocks3","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","_this$$form$data2","sentBlockId","isProvisionalDraft","blockId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","$buttonsContainer","$childrenWarningsContainer","selectTab","tabUid","attr","retryAll","_this$_topbarLeftWidt","_this$_topbarRightWid","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","_this$getParent","_parentBlockType$getC","parentBlockType","allowedBlockTypes","getBlockTypes","map","bt","getBlockTypeByHandle","getMaxTopBlocks","noAllowedBlockTypes","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","addDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","_pasteData$blocks$len","_pasteData$blocks","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","$collapsedChildrenContainer","ButtonClass","$ownerContainer","getItems","namespaceId","namespacedId","toggle","_toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","_this$$form$data3","_this$$form$data4","pause","resume","currentTarget","blockTypes","groups","NewBlockMenu","constructor","_defineProperty","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","_this$$ownerContainer","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","additionalCheck","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","ButtonsGrid","_ref","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","_visibleLayoutElements","_newBlockCount","_groups","gInfo","Group","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","_$spinner","newBlockMenuStyle","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","parseInt","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","missingBlockCount","topLevelBlockTypes","createChildBlocks","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_this$_tempButtons","_block$getButtons","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","layoutTab","getAttribute","querySelectorAll","layoutElement","createChildBlocksIfAllowed","childBlockTypes","childBlockType","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","_this$$form$data5","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","_this$$form$data6","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_this$_tempButtons2","_tempButtonsBlock","_block$getButtons2","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","submittingForm","ownerCanonicalId","ownerDraftId","originalBlockIds","_this$_visibleLayoutE","selectedTabId","selectedTab","response","_updateVisibleElements","finally","blockData","_blockData$tabs$match","_blockData$tabs","$allTabContainers","changedElements","missingElements","tabInfo","uid","class","appendTo","j","elements","elementInfo","replaceAll","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","$tabsHtml","empty","initialDeltaValues","_addSpinnerAfter","_animateSpinner","_addSpinnerBefore","err","_removeSpinner","_duplicate","_this$$form$data7","newBlocks","renderedBlock","newBlockId","newIndex","firstBlock","displayError","message","_this$$form$data8","_e$level","loopStartingPoint","siblingBlock","addAfter","error","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","displayNotice","n","_block$getLevel","baseLevel","blockIndex","subBlocks","getBlockData","context","_window","inputs","Neo","Input","createInput","input"],"sourceRoot":""}