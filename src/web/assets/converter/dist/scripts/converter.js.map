{"version":3,"file":"converter/dist/scripts/converter.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICAlF,MAAM,EAA+BI,M,aCArC,MAAM,EAA+BC,Q,aCGrC,MAAMC,EAAYC,SAASC,eAAe,QACpCC,EAAUF,SAASG,cAAc,yBAEvC,GAAgC,qBAA5BJ,EAAUK,QAAQC,OAA4C,OAAZH,EAAkB,CACtE,MAAMI,EAAQ,OAASC,aACjBC,EAAcF,EAAMG,KAAK,wBAC/B,IAAIC,EAAgBV,SAASC,eAAe,yBACxCU,EAAUX,SAASC,eAAe,0BAClCW,GAAU,EAEd,MAAMC,EAAeC,IACnBF,IAAYE,EAEZJ,EAAcK,UAAUC,OAAO,YAAaJ,GAC5CJ,EAAYS,YAAY,YAAaL,GAEjCA,EACFN,EAAMY,IAAI,cAEVZ,EAAMa,GAAG,cAAeC,GAAMA,EAAEC,kBAClC,EAGIC,EAAU,KACdT,GAAY,GACZF,EAAQI,UAAUQ,OAAO,UAEzB,sBAAwB,mCAAoC,CAAErB,QAASA,EAAQG,QAAS,CAACmB,EAAUC,KAC7FD,EAASE,SAEX,OAASC,eAAe,SAAc,gBACtCC,OAAOC,SAASC,WAEhBjB,GAAY,GACZ,OAASkB,aAAa,MAAQ,MAAO,0CACrCP,EAASQ,QAAQC,SAASC,GAAU,OAASH,aAAaG,KAC5D,GACD,EAGGC,EAAY,KAChB,MAAMC,EAAiBpC,SAASC,eAAe,uBAExB,OAAnBmC,GAAkF,OAAvDA,EAAejC,cAAc,wBAI5DiC,EAAeC,mBAAmB,aAAc,0HAI/B,MAAQ,MAAO,yEACO,MAAQ,MAAO,+QAG8B,MAAQ,MAAO,8IAGxE,MAAQ,MAAO,wHAM1C3B,EAAgBV,SAASC,eAAe,yBACxCU,EAAUX,SAASC,eAAe,0BAElCS,EAAc4B,iBAAiB,SAAUC,IACvCA,EAAMlB,iBAEFT,GAAWgB,OAAOY,QAAQ,MAAQ,MAAO,+FAC3ClB,GACF,IACD,EAGsB,IAAIM,OAAOa,iBAAiBN,GACpCO,QACf1C,SAASC,eAAe,YACxB,CACE0C,WAAW,EACXC,SAAS,GAGf,C","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/./src/web/assets/converter/src/scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","import Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst fieldType = document.getElementById('type')\nconst fieldId = document.querySelector('input[name=\"fieldId\"]')\n\nif (fieldType.dataset.value === 'benf\\\\neo\\\\Field' && fieldId !== null) {\n  const $form = Craft.cp.$primaryForm\n  const $formButton = $form.find('input[type=\"submit\"]')\n  let convertButton = document.getElementById('Matrix-convert_button')\n  let spinner = document.getElementById('Matrix-convert_spinner')\n  let enabled = true\n\n  const toggleState = (state) => {\n    enabled = !!state\n\n    convertButton.classList.toggle('disabled', !enabled)\n    $formButton.toggleClass('disabled', !enabled)\n\n    if (enabled) {\n      $form.off('submit.neo')\n    } else {\n      $form.on('submit.neo', (e) => e.preventDefault())\n    }\n  }\n\n  const perform = () => {\n    toggleState(false)\n    spinner.classList.remove('hidden')\n\n    Craft.postActionRequest('neo/conversion/convert-to-matrix', { fieldId: fieldId.value }, (response, textStatus) => {\n      if (response.success) {\n        // Prevent the \"Do you want to reload this site?\" prompt from showing before page reload\n        Craft.cp.removeListener(Garnish.$win, 'beforeunload')\n        window.location.reload()\n      } else {\n        toggleState(true)\n        Craft.cp.displayError(Craft.t('neo', 'Could not convert Neo field to Matrix'))\n        response.errors?.forEach((error) => Craft.cp.displayError(error))\n      }\n    })\n  }\n\n  const applyHtml = () => {\n    const matrixSettings = document.getElementById('craft-fields-Matrix')\n\n    if (matrixSettings === null || matrixSettings.querySelector('#conversion-prompt') !== null) {\n      return\n    }\n\n    matrixSettings.insertAdjacentHTML('afterbegin', `\n      <div id=\"conversion-prompt\">\n        <div class=\"field\">\n          <div class=\"heading\">\n            <label>${Craft.t('neo', 'Convert from Neo')}</label>\n            <div class=\"instructions\"><p>${Craft.t('neo', 'This field is currently of the Neo type. You may automatically convert it to Matrix along with all of its content.')}</p></div>\n          </div>\n          <div class=\"input ltr\">\n            <input id=\"Matrix-convert_button\" type=\"button\" class=\"btn submit\" value=\"${Craft.t('neo', 'Convert')}\">\n            <span id=\"Matrix-convert_spinner\" class=\"spinner hidden\"></span>\n          </div>\n          <p class=\"warning\">${Craft.t('neo', 'By converting to Matrix, structural information will be lost.')}</p>\n        </div>\n      </div>\n      <hr>\n    `)\n\n    convertButton = document.getElementById('Matrix-convert_button')\n    spinner = document.getElementById('Matrix-convert_spinner')\n\n    convertButton.addEventListener('click', (event) => {\n      event.preventDefault()\n\n      if (enabled && window.confirm(Craft.t('neo', 'Are you sure? This is a one way operation. You cannot undo conversion from Neo to Matrix.'))) {\n        perform()\n      }\n    })\n  }\n\n  const settingsObserver = new window.MutationObserver(applyHtml)\n  settingsObserver.observe(\n    document.getElementById('settings'),\n    {\n      childList: true,\n      subtree: true\n    }\n  )\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Craft","Garnish","fieldType","document","getElementById","fieldId","querySelector","dataset","value","$form","$primaryForm","$formButton","find","convertButton","spinner","enabled","toggleState","state","classList","toggle","toggleClass","off","on","e","preventDefault","perform","remove","response","textStatus","success","removeListener","window","location","reload","displayError","errors","forEach","error","applyHtml","matrixSettings","insertAdjacentHTML","addEventListener","event","confirm","MutationObserver","observe","childList","subtree"],"sourceRoot":""}